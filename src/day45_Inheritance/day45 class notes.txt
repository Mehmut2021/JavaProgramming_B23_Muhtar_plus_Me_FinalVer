08/16/2021
Topics: OOP Inheritance Intro:
				extends keyword
				IS A vs HAS A Relation
				super keyword

Package name: day45_Inheritance

Warmup task:
	1. create a class named Square
            private variables:
                side (double)

            Encapsulate All the private fields
                (side can not be set to negative)

            Add a constructor that can set the fields
                

            Extra methods:
                area(), perimeter(), toString(), equals()    



Person
	name, age, gender

	setPersonInfo(name, age, gender)

person1.setPersonInfo("John", 27, 'M');


OOP Inheritance: to build IS A relationshipt between classes (parent & child classes)
				
				easiest way to get rich ==> extends

		child class (sub class): can inherit all the variables and methods from parent class (only the visible ones)

								constrcutor can not be inherited

		parent class (super class): can not inherit anthing from child class


		advantages:
			less memory
			less codes
			easy to maintain
			improves the reusability



Animal:
	name, breed, gender, size, age, color
	eat(), drink(), sleep(), toString()


Dog extends Animal:
	
	Actions:	
		bark()

Cat extends Animal:
	
	Actions:
		meow()
		 
Tiger extends Animal:
	
	Actions:
		roar()
		









Is A vs Has A:
	
	Has A:
		class Engine{

		}
		
		class Car{ // Car Has An Engine
			Engine
		}


		class Tester{

		}

		class Scrumteam{  // Scrumteam Has A Tester
			Tester
		}


	Is A:

		class Animal{

		}

		class Dog extends Animal { // Dog Is An Animal

		}


		class Car{

		}

		class Toyota extends Car{ // Toyota Is A car

		}














